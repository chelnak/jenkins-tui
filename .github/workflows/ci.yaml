name: jenkins-tui

on:
  push:
    tags:
      - v*
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: jenkins-tui

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python 🐍
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install and configure Poetry 🎉
      uses: snok/install-poetry@v1
      with:
        version: 1.1.10
        virtualenvs-in-project: true

    - name: Install dependencies 🚧
      run: poetry install

    - name: Build 👷
      run: |
        source $VENV
        make build

    - name: Build image 🐳
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    - name: Log into registry 🐳
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image 🐳
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
          docker tag $IMAGE_NAME $IMAGE_ID:$(echo $VERSION | sed -e 's/^v//')
          # latest should always reflect the most recent tagged release
          VERSION=latest
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          # main represents the latest build from main branch
          VERSION=main
        else
          # dev represents the latest build from prs or branches
          VERSION=dev
        fi
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push -a $IMAGE_ID

    - name: Push version change ✅
      if: startsWith(github.ref, 'refs/tags/v')
      uses: peter-evans/create-pull-request@v3
      with:
        title: Bump pyproject.toml
        commit-message: "bump pyproject.toml"
        branch: bump_version
        body: This PR bumps pyproject.toml from ${{ github.ref }}
        base: main

    - name: Publish 📦
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        poetry config pypi-token.pypi $POETRY_PYPI_TOKEN_PYPI
        poetry publish
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}

    - name: Build Changelog 📝
      if: startsWith(github.ref, 'refs/tags/v')
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@v1
      with:
        configuration: "changelog.json"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release 🚀
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        name: jenkins-tui
        body: ${{steps.build_changelog.outputs.changelog}}
        token: ${{ secrets.GITHUB_TOKEN }}
