---
jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy: "loggedInUsersCanDoAnything"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: false
  mode: NORMAL
  myViewsTabBar: "standard"
  # nodes:
  #   - permanent:
  #       launcher:
  #         ssh:
  #           credentialsId: "java-agent-ssh-private-key"
  #           host: "java11-agent"
  #           launchTimeoutSeconds: 210
  #           maxNumRetries: 10
  #           port: 22
  #           retryWaitTime: 15
  #           jvmOptions: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8001"
  #           javaPath: "/opt/java/openjdk/bin/java"
  #           sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
  #       name: "java11-agent"
  #       numExecutors: 1
  #       remoteFS: "/var/data"
  #       nodeProperties:
  #         - envVars:
  #             env:
  #               - key: "JAVA_HOME"
  #                 value: "/opt/java/openjdk"
  #               - key: "MAVEN_HOME"
  #                 value: "/opt/maven"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
  slaveAgentPort: 50000
  systemMessage: "<h1>Warnings Next Generation Plugin Showcase</h1>"
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  viewsTabBar: "standard"

security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  sSHD:
    port: -1

# credentials:
#   system:
#     domainCredentials:
#       - credentials:
#           - basicSSHUserPrivateKey:
#               id: "java-agent-ssh-private-key"
#               privateKeySource:
#                 directEntry:
#                   privateKey: |
#                     -----BEGIN RSA PRIVATE KEY-----
#                     MIIEowIBAAKCAQEA86cZk1vZh/OwzJDEqga0nnKEh1QpCm1uSDjvuLp2pPDPHMp/
#                     m9Il9O8ZAZ+IVCUXygO3s1BvBF/a7uVYp7XqjDiTj5Jwrs5lEtl4/1iXXKtwbpAc
#                     bsoiEaFDl7Amc4pUfwzsjaqY4yN4jW+JaLOf/+GqCjwpiyJxZ0N2ONlWoph9dvfH
#                     JBK+LUcbKIqbBAADT12d6ePIBsDn9Yaeem0xSJrwEzcMTFYj6asinMlWgO7VwgZx
#                     JPxhMG+jIq6Mh20tFbwc/XGTqSb/vMkJ8i53RnYm5PoT2xqeYlQCLJtvBRBfuBb5
#                     WJaQcKvTmLoTgkRCbx/QsQzIWzl4MCj56PRsjQIDAQABAoIBAAGTiy7Q4U9n3DT2
#                     ms8ey/xacVEO0lUm8Be3hpWDX1Eh3bUp+jlf2q8C/P5tscwZkVXVQFMAqjc1B42U
#                     Hka3fpT5qLq9D82RuEWu8oF0aUZINaoBdK2i0SWcDXvlv9nvgyxvQPiJqgOOLzF7
#                     D0CGKPrW0urOCNbFmkY4wYMMpOrYXnwb6bc1p7snbzeRigaoGvSgvH7fx2Steg1o
#                     j50C4BKVtXPKQdmckG2SFn0T+U1iCsRG+KNcENX2vX8gyrXImAH093WTjKsmM9et
#                     ddWB+molSnXR/MNrf6BB2mpvXLNyR2/RgBd2jwSQnpDkpms4Br5nek3YYN1dBRL4
#                     6bofHWECgYEA+7n5OIEbvpMtGxJwOovj0KZMzPkHyQH/DZzo48rS+39goNk/0KLF
#                     c3L3sHbT3Lr4qA/6JOCjlzw7o2AbOrRL4ke1uqcCVQMdDqZdvNezMvTzqEbQGdHD
#                     aFnEcUV2tvEwP11q37ianBRPH5stOnEwQNuv6AJo5LKwi4mTS7qEW9cCgYEA98oJ
#                     h+vMKpXGdJzkSDMzYBrC2tYgqjby6+zGKz8BZ58YecsL+oi2GXBaDTfK+16CKeFM
#                     8+qQN9Kl1ZNOlk64XJXjt77h0FcFuGe+6rUpM1aEizrf9sWPVZO+QQfhnjsiAhtQ
#                     YX783ydy9rMn1FDPMtNNq4GMhGsFCaL4RupOjjsCgYAnk9XbTHFQRVOSLhP3IIdx
#                     BrSMhZrzv5yaR1FWf00svZozr/SYmP7yZ+EJnaUxzzPJOLnbknYmERJPXYzqbe6A
#                     ZUXtUtTLCPJIm1+hkUhbeqfUjU2qwZA3l+WK6aEAomszizyCcEPexlKqZXt29NTh
#                     XakKkVZsnqujRL4j6e9lgQKBgQDvhD8EQJyAyXgkvoc3dy6BBj019WdrwWO9Q4km
#                     wmdkN3gcOnYgvUdwfZa+UiEGLAub2eldmW3AWADu2s5LIlq5PDX7Jir3DTc9UiNM
#                     ksL5mfbS8p0M11i+uupbx/eB0N0FtktTgsGCH4rUBsdIRriSA4h/cOFYGm6rKvnc
#                     6p32gwKBgHZYmXzuBWZlWEmPiXbTaI4egJugur5FrT6BJfiLsN2MHBJi9k1IpKEP
#                     SaT+v0IXJ8jP4gSiu4/gyJQpkn7yiMNhwYWlQt+1zyIkHjUsEG82Z8Mqpjx2EJgG
#                     MxDybQux1uk0hyCmMS757WkbTyi0pTWz7PgTIdfmYqhZVV8KRSUi
#                     -----END RSA PRIVATE KEY-----"
#               scope: GLOBAL
#               username: "agent"
#           - gitHubApp:
#               appID: "74721"
#               description: "GitHub App"
#               id: "github-app"
#               privateKey: ${GITHUB_APP}
#               scope: GLOBAL
unclassified:
  globalDefaultFlowDurabilityLevel:
    durabilityHint: PERFORMANCE_OPTIMIZED
  location:
    adminAddress: "Adresse nicht konfiguriert <nobody@nowhere>"
    url: "http://localhost:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
  pollSCM:
    pollingThreadCount: 10

tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  maven:
    installations:
      - name: "mvn-default"
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.6.3"
  jdk:
    defaultProperties:
      - installSource:
          installers:
            - jdkInstaller:
                acceptLicense: false
  pipelineMaven:
    publisherOptions:
      - jacocoPublisher:
          disabled: true
      - junitPublisher:
          disabled: true
          healthScaleFactor: 1.0
    triggerDownstreamUponResultAborted: false
    triggerDownstreamUponResultFailure: false
    triggerDownstreamUponResultNotBuilt: false
    triggerDownstreamUponResultSuccess: true
    triggerDownstreamUponResultUnstable: false

jobs:
  - script: >
      pipelineJob('pipeline-codingstyle') {
          definition {
              cpsScm {
                  scriptPath 'Jenkinsfile'
                  scm {
                    git {
                        remote { url 'https://github.com/uhafner/codingstyle.git' }
                        branch '*/master'
                        extensions {}
                    }
                  }
              }
          }
      };
      pipelineJob('pipeline-analysis-model') {
          definition {
              cpsScm {
                  scriptPath 'etc/Jenkinsfile.analysis'
                  scm {
                    git {
                        remote { url 'https://github.com/jenkinsci/analysis-model.git' }
                        branch '*/master'
                        extensions {}
                    }
                  }
              }
          }
      };
      pipelineJob('pipeline-warnings-ng') {
          definition {
              cpsScm {
                  scriptPath 'etc/Jenkinsfile.analysis'
                  scm {
                    git {
                        remote { url 'https://github.com/jenkinsci/warnings-ng-plugin.git' }
                        branch '*/master'
                        extensions {}
                    }
                  }
              }
          }
      };
      freeStyleJob('freestyle-warnings-ng') {
          scm {
              git {
                  remote { url 'https://github.com/jenkinsci/warnings-ng-plugin.git' }
                  branch '*/master'
                  extensions {}
              }
          }
          steps {
              maven {
                  mavenInstallation('mvn-default')
                  goals('clean verify')
                  rootPOM('plugin/pom.xml')
                  properties(skipITs: true)
              }
          }
          publishers {
              recordIssues {
                  sourceCodeEncoding('UTF-8')
                  aggregatingResults(true)
                  tools {
                      mavenConsole {}
                      java {}
                      javaDoc {}
                      taskScanner {
                          highTags('FIXME')
                          normalTags('TODO')
                          includePattern('**/*.java')
                          excludePattern('target/**/*,**/TaskScannerTest.java')
                      }
                      spotBugs {
                            pattern('**/target/spotbugsXml.xml')
                            useRankAsPriority(true)
                      }
                      checkStyle {
                            pattern('**/target/checkstyle-result.xml')
                      }
                      pmd {
                            pattern('**/target/pmd.xml')
                      }
                      cpd {
                            pattern('**/target/cpd.xml')
                      }
                  }
              }
          }
      };
      freeStyleJob('freestyle-analysis-model') {
          scm {
              git {
                  remote { url 'https://github.com/jenkinsci/analysis-model.git' }
                  branch '*/master'
                  extensions {}
              }
          }
          steps {
              maven {
                  mavenInstallation('mvn-default')
                  goals('clean verify')
                  properties(skipITs: true)
              }
          }
          publishers {
              recordIssues {
                    sourceCodeEncoding('UTF-8')
                    aggregatingResults(true)
                    tools {
                      mavenConsole {}
                      java {}
                      javaDoc {}
                      taskScanner {
                          highTags('FIXME')
                          normalTags('TODO')
                          includePattern('**/*.java')
                          excludePattern('target/**/*')
                      }
                      spotBugs {
                            pattern('**/target/spotbugsXml.xml')
                            useRankAsPriority(true)
                      }
                      checkStyle {
                            pattern('**/target/checkstyle-result.xml')
                      }
                      pmd {
                            pattern('**/target/pmd.xml')
                      }
                      cpd {
                            pattern('**/target/cpd.xml')
                      }
                  }
              }
        }
      };
